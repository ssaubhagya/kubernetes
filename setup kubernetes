1---Install Docker on all three nodes.
Do the following on all three nodes:
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository \
        "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
        $(lsb_release -cs) \
        stable"
        sudo apt-get update
        sudo apt-get install -y docker-ce=18.06.1~ce~3-0~ubuntu
        sudo apt-mark hold docker-ce

 Verify that Docker is up and running with:
        sudo systemctl status docker

2- Install Kubeadm, Kubelet, and Kubectl on all three nodes.

    Install the Kubernetes components by running this on all three nodes:
        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
        cat << EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
        deb https://apt.kubernetes.io/ kubernetes-xenial main
        EOF
        sudo apt-get update
        sudo apt-get install -y kubelet=1.12.7-00 kubeadm=1.12.7-00 kubectl=1.12.7-00
        sudo apt-mark hold kubelet kubeadm kubectl

3- Bootstrap the cluster on the Kube master node.
    On the Kube master node, do this:
        sudo kubeadm init --pod-network-cidr=10.244.0.0/16

     When it is done, set up the local kubeconfig:
        mkdir -p $HOME/.kube
        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $(id -u):$(id -g) $HOME/.kube/config

    Take note that the kubeadm init command printed a long kubeadm join command to the screen. You will need that kubeadm join command in the next step!

        kubectl version
4- Join the two Kube worker nodes to the cluster.
    Copy the kubeadm join command that was printed by the kubeadm init command earlier, with the token and hash. Run this command on both worker nodes, but make sure you add sudo in front of it:
    sudo kubeadm join $some_ip:6443 --token $some_token --discovery-token-ca-cert-hash $some_hash
    kubectl get nodes

5- Set up cluster networking with flannel.
    Turn on iptables bridge calls on all three nodes:
        echo "net.bridge.bridge-nf-call-iptables=1" | sudo tee -a /etc/sysctl.conf
        sudo sysctl -p
    Next, run this only on the Kube master node:
        kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/bc79dd1505b0c8681ece4de4c0d86c5cd2643275/Documentation/kube-flannel.yml
        kubectl get nodes



